# Gradle
# Build your Java project and run tests with Gradle using a Gradle wrapper script.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- master

pool:
  vmImage: ubuntu-default

steps:
- task: Gradle@2
  inputs:
    workingDirectory: ''
    gradleWrapperFile: 'gradlew'
    gradleOptions: '-Xmx3072m'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.8'
    jdkArchitectureOption: 'x64'
    publishJUnitResults: true
    testResultsFiles: '**/TEST-*.xml'
    tasks: 'build'
- task: WhiteSource@21
  inputs:
    cwd: '$(System.DefaultWorkingDirectory)'
    projectName: 'test33'
    configuration: |
      wss.url=https://saas.whitesourcesoftware.com/agent
      includes=**/*.*
      resolveAllDependencies=true
      gradle.resolveDependencies=true
      gradle.runAssembleCommand=true
      gradle.aggregateModules=true
      gradle.preferredEnvironment=gradle
      gradle.downloadMissingDependencies=true
      gradle.runPreStep=true
      gradle.ignoreSourceFiles=false
      gradle.preferredEnvironment=gradle
      gradle.innerModulesAsDependencies=true
      archiveExtractionDepth=10
      archiveIncludes=**/*.war **/*.ear **/*.zip **/*.gzip **/*.tar.bz2 **/*.tar.gz **/*.tgz **/*.tar
      #archiveExcludes=**/*sources.jar